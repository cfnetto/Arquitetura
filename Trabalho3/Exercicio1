# Disciplina: Arquitetura e Organização de Computadores 
# Atividade: Avaliação 03 – Programação de Procedimentos 
# Aluno: - Candido Fachini Neto 

.data 

str_leitura: .string "Digite um valor: "
mdc1: .string "O MDC de "
mdc2: .string " e "
mdc3: .string " é igual a: "

.text 

j main #Pula para o main

################################################################ 
procedimento_mdc: 

addi sp, sp, -12 #Ajusta a pilha para 3 valores
sw ra, 0(sp) #Salva o endereço de retorno na pilha
sw s0, 4(sp) #Salva o valor de s0 na pilha
sw s1, 8(sp) #Salva o valor de s1 na pilha

mv s0, a0 # s0 = x
mv s1, a1 # s1 = y

Loop: 
beq s0, s1, Exit #Se x == y vai para Exit
blt s0, s1, Subtracao #Se x < y, vai para o rótulo Subtracao
sub s0, s0, s1 # x = x - y
j Loop #Volta para o início do loop

Subtracao: 
sub s1, s1, s0 # y = y - x
j Loop #Volta para o início do loop

Exit: 
mv a2, s0 #Coloca o resultado em a0
lw ra, 0(sp) #Recupera o endereço de retorno
lw s0, 4(sp) #Recupera o valor de s0 
lw s1, 8(sp) #Recupera o valor de s1 
addi sp, sp, 16 #Desaloca espaço da pilha
jr ra #Retorna para o main 
################################################################ 

################################################################ 
main: 
la a0, str_leitura #Carrega o endereço da string em a0
li a7, 4 #Carrega o valor 4 no a7 (printString) 
ecall #Imprime a mensagem na tela 

li a7, 5 #Carrega o valor 5 no a7 (readInt) 
ecall #Espera o usuario digitar um número
mv a1, a0 #Move o valor digitado para o a1 

#O processo é repetido assim o usuario digita os 2 numeros 

la a0, str_leitura #Carrega o endereço da string em a0
li a7, 4 #Carrega o valor 4 no reg a7 (printString) 
ecall #Imprimi a string
 
li a7, 5 #Carrega o valor 5 no a7 (readInt)
ecall #Espera o usuario digitar um número 

#Numeros digitados estarão armazenados nos reg's a1 e a0 

jal procedimento_mdc #Chama o procedimento MDC

mv t0, a0 # t0 recebe o valor de a0 (para impressão)

la a0, mdc1 #Carrega o endereço da string em a0 
li a7, 4 #Carrega o valor 4 no reg a7 (printString)
ecall #Imprimi a string 

mv a0, t0 #Move o valor de t0 para a0
li a7, 1 #Carrega o valor 1 no reg a7 (printInt)
ecall #Imprimi o primeiro número digitado pelo 
usuario 

la a0, mdc2 #Carrega o endereço da string em a0
li a7, 4 #Carrega o valor 4 no reg a7 (printString)
ecall #Imprimi a string

mv a0, a1 #Move o valor de a1 para a0 
li a7, 1 #Carrega o valor 1 no reg a7 (printInt)
ecall #Imprimi o segundo número digitado pelo 
usuario 

la a0, mdc3 #Carrega o endereço da string em a0
li a7, 4 #Carrega o valor 4 no reg a7 (printString)
ecall #Imprimi a string

mv a0, a2 #Move o valor de a2 para a0 (resultado MDC)
li a7, 1 #Carrega o valor 1 no reg a7 (printInt)
ecall #Imprime o MDC entre os numeros de a0 e a1                    
################################################################
